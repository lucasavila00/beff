---
source: packages/beff-core/tests/print_parser.rs
expression: "decoder(r#\"\n        export type Alias = [number, number]\n        parse.buildParsers<{ Dec: Alias }>();\n      \"#)"
---
function ValidateAlias(ctx, input) {
    return (hoisted_Alias_2.validateTupleValidator.bind(hoisted_Alias_2))(ctx, input);
}
function ParseAlias(ctx, input) {
    return (hoisted_Alias_3.parseTupleParser.bind(hoisted_Alias_3))(ctx, input);
}
function ReportAlias(ctx, input) {
    return (hoisted_Alias_4.reportTupleReporter.bind(hoisted_Alias_4))(ctx, input);
}
const validators = {
    Alias: ValidateAlias
};
const parsers = {
    Alias: ParseAlias
};
const reporters = {
    Alias: ReportAlias
};
const hoisted_Alias_0 = [
    validateNumber,
    validateNumber
];
const hoisted_Alias_1 = null;
const hoisted_Alias_2 = new TupleValidator(hoisted_Alias_0, hoisted_Alias_1);
const hoisted_Alias_3 = new TupleParser([
    parseIdentity,
    parseIdentity
], null);
const hoisted_Alias_4 = new TupleReporter(hoisted_Alias_0, hoisted_Alias_1, [
    reportNumber,
    reportNumber
], null);
